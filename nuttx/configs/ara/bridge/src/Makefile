#
# Copyright (c) 2015 Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
# 3. Neither the name of the copyright holder nor the names of its
# contributors may be used to endorse or promote products derived from this
# software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

-include $(TOPDIR)/Make.defs

CFLAGS		+= -I$(TOPDIR)/sched

ASRCS		=
AOBJS		= $(ASRCS:.S=$(OBJEXT))

CSRCS		= up_boot.c

ifeq ($(CONFIG_APB_AP),y)
CSRCS   += csi_tx_init.c
else ifeq ($(CONFIG_APB_CAMERA),y)
CSRCS   += csi_rx_init.c
endif

ifeq ($(CONFIG_PWM),y)
CSRCS		+= up_pwm.c
endif


ifeq ($(CONFIG_ARA_BRIDGE_HAVE_USB4624),y)
CSRCS		+= usb4624.c
endif

COBJS		= $(CSRCS:.c=$(OBJEXT))

SRCS		= $(ASRCS) $(CSRCS)
OBJS		= $(AOBJS) $(COBJS)


GIT_VERSION := $(shell git describe --dirty --always 2>/dev/null)
BUILD_TIME := $(shell date)
BUILD_USER := $(shell whoami)
BUILD_HOST := $(shell hostname)

BUILD_INFO := $(shell echo "($(BUILD_USER)@$(BUILD_HOST)) $(BUILD_TIME)")

ARCH_SRCDIR	= $(TOPDIR)/arch/$(CONFIG_ARCH)/src
ifeq ($(WINTOOL),y)
	CFLAGS	+= -I "${shell cygpath -w $(ARCH_SRCDIR)/chip}" \
		   -I "${shell cygpath -w $(ARCH_SRCDIR)/common}" \
		   -I "${shell cygpath -w $(ARCH_SRCDIR)/armv7-m}"
else
	CFLAGS	+= -I$(ARCH_SRCDIR)/chip -I$(ARCH_SRCDIR)/common -I$(ARCH_SRCDIR)/armv7-m
endif

BUILD_HEADER := $(TOPDIR)/include/nuttx/ara_build_info.h

.PHONY: $(BUILD_HEADER)

$(BUILD_HEADER):
	@echo "// Autogenerated, do not modify!" > $@
	@echo "#ifndef _ARA_BUILD_INFO_H_" >> $@
	@echo "#define _ARA_BUILD_INFO_H_" >> $@
	@echo "#define ARA_FW_VERSION \"$(GIT_VERSION)\"" >> $@
	@echo "#define ARA_BUILD_INFO \"$(BUILD_INFO)\"" >> $@
	@echo "#endif" >> $@

all: libboard$(LIBEXT)

$(AOBJS): %$(OBJEXT): %.S
	$(call ASSEMBLE, $<, $@)

$(COBJS) $(LINKOBJS): %$(OBJEXT): %.c
	$(call COMPILE, $<, $@)

libboard$(LIBEXT): $(OBJS)
	$(call ARCHIVE, $@, $(OBJS))

.depend: Makefile $(SRCS) | $(BUILD_HEADER)
	$(Q) $(MKDEP) $(CC) -- $(CFLAGS) -- $(SRCS) >Make.dep
	$(Q) touch $@

depend: .depend

clean:
	$(call DELFILE, $(BUILD_HEADER))
	$(call DELFILE, libboard$(LIBEXT))
	$(call CLEAN)

distclean: clean
	$(call DELFILE, Make.dep)
	$(call DELFILE, .depend)

-include Make.dep
